# installation : run 'podmen recipe env-file' or put this file into .podman folder 
# example usage: * put an .env file in your repo (with 'export FOO=1' e.g.)
#                * override them on remote-server using './podmen .env git@server FOO=2'
#                * run './podmen .env' to see all local/remote env-vars 

recipe_envfile(){
  trigger recipe:envfile 
  test -f .env      && print "reading  '.env'"               && . .env
  test -f .env.live && print "override '.env' << .env.live"  && . .env.live
  print PORT=$PORT
}

envset(){ # envset [remote] [FOO=bar] : shows or sets [remote] environment variables
  test -f .env || echo 'export FOO=bar    # used for development' > .env
  test -z $1 && { 
    test -f .env || echo 'export PORT=1234' > .env; print .env; echo; cat .env; echo;
    for i in .podmen/*@*; do $0 envset $(basename $i); echo; done
    exit 0; 
  }
  loadremote $1
  if ! test -z "$2"; then 
    printf "export %-40s # $(date)\n" "$2\"" | awk '{ gsub("=","=\"",$0); print $0; }' | ssh -p $port $1 "cat >> $gitpath/.env.live"
    print OK
  else
    print $1:$gitpath/.env.live:
    echo
    test -z $2 && ssh -p $port $1 "test -f $gitpath/.env.live && cat $gitpath/.env.live || echo no env-vars yet" 
    echo
  fi
}

on start recipe_envfile 
